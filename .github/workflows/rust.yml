name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      docker_needed: ${{ steps.check.outputs.docker_needed }}
    steps:
      - uses: actions/checkout@v2
        with:
          # Ensure the full commit history is cloned.
          fetch-depth: 0

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --verbose --release

      - name: Prepare release artifact
        run: |
          mkdir -p release
          cp ./target/release/lure ./release/

      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: release
          path: release/lure

      - name: Check for Docker-relevant changes
        id: check
        run: |
          # Ensure the full history is available (actions/checkout fetch-depth set to 0).
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)
          echo "Changed files: $CHANGED_FILES"
          if echo "$CHANGED_FILES" | grep -qE '^(src/|Cargo\.toml|Cargo\.lock)'; then
            echo "docker_needed=true" >> $GITHUB_OUTPUT
          else
            echo "docker_needed=false" >> $GITHUB_OUTPUT
          fi

  docker_release:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && needs.build.outputs.docker_needed == 'true'
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download release artifact
        uses: actions/download-artifact@v4
        with:
          name: release

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3
        with:
          cosign-release: 'v2.1.1'

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile.copy
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max